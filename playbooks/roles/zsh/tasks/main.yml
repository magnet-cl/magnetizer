---
- name: install zsh and oh-my-zsh
  include_role:
    name: gantsign.oh-my-zsh
  vars:
    oh_my_zsh_plugins:
      - autojump
      - command-not-found
      - docker
      - docker-compose
      - encode64
      - git
      - git-flow
      - github
      - history-substring-search
      - pip
      - systemd
    oh_my_zsh_theme: dieter
  tags: zsh

- name: set custom plugins list as fact
  set_fact:
    custom_plugins: "{{ lookup('fileglob', 'files/*', wantlist=True) }}"

- name: create custom plugins directories
  file:
    path: "~{{ item.0.username }}/.oh-my-zsh/custom/plugins/{{ (item.1 | basename).split('.')[0] }}"
    state: directory
    owner: "{{ item.0.username }}"
    group: "{{ item.0.username }}"
  with_nested:
    - "{{ users }}"
    - "{{ custom_plugins }}"
  become: yes
  tags: zsh

- name: copy custom plugins
  copy:
    src: "{{ item.1 }}"
    dest: "~{{ item.0.username }}/.oh-my-zsh/custom/plugins/{{ (item.1 | basename).split('.')[0] }}"
    owner: "{{ item.0.username }}"
    group: "{{ item.0.username }}"
  with_nested:
    - "{{ users }}"
    - "{{ custom_plugins }}"
  become: yes
  tags: zsh

- name: list custom plugins  # the first user is enough to obtain the list
  command: "ls -1 ~{{ users.0.username }}/.oh-my-zsh/custom/plugins/"
  register: "custom_plugins"
  become: yes
  changed_when: "custom_plugins.stdout_lines | length != 0"
  tags:
    - zsh

- name: enable custom plugins
  replace:
    path: "~{{ item.username }}/.zshrc"
    regexp: '^plugins=\((.+)\)$'
    replace: 'plugins=(\1 {{ custom_plugins.stdout_lines | join(" ") }})'
  with_items:
    - "{{ users }}"
  become: yes
  tags: zsh
